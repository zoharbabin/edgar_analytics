"""
manual_metrics_example.py

Demonstrates using the lower-level 'metrics' module directly to compute
financial ratios from your own DataFrame inputs (e.g., from previously
fetched or offline data). This bypasses the Orchestrator and EDGAR calls.

If your DataFrames contain IFRS-labeled lines, the system will 
match them automatically if synonyms are present (e.g., "ifrs-full:RightOfUseAssets").
"""

import pandas as pd
from edgar_analytics.metrics import compute_ratios_and_metrics

def main():
    # Example balance sheet
    balance_data = {
        "Value": [
            2000,  # Total current assets
            1000,  # Total current liabilities
            5000,  # Total assets
            1500,  # Total liabilities
            3500,  # Total equity
        ]
    }
    balance_index = [
        "Total current assets",
        "Total current liabilities",
        "Total assets",
        "Total liabilities",
        "Total shareholdersâ€™ equity",
    ]
    balance_df = pd.DataFrame(balance_data, index=balance_index)

    # Example income statement
    income_data = {
        "Value": [
            6000,  # Net sales (Revenue)
            -3000, # Cost of sales (negative sign -> flip it)
            3000,  # Gross margin
            -800,  # Operating expenses (negative sign -> flip it)
            1500,  # Net income
        ]
    }
    income_index = [
        "Net sales",
        "Cost of sales",
        "Gross margin",
        "Total operating expenses",
        "Net income",
    ]
    income_df = pd.DataFrame(income_data, index=income_index)

    # Example cash flow
    cash_data = {
        "Value": [
            1800,  # NetCashProvidedByOperatingActivities
            -400,  # Capital Expenditures
        ]
    }
    cash_index = [
        "Cash generated by operating activities",
        "Capital Expenditures"
    ]
    cash_df = pd.DataFrame(cash_data, index=cash_index)

    # Compute the metrics
    metrics = compute_ratios_and_metrics(balance_df, income_df, cash_df)

    # Print them out
    print("Manual Metrics Computation:")
    for k, v in metrics.items():
        print(f"{k}: {v}")

if __name__ == "__main__":
    main()
